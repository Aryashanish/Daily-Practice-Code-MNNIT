//Problem Link
https://leetcode.com/problems/find-peak-element/?fbclid=IwAR0pQwX_I-0BaCA2DJ6VKFIDB95vnJRwRsO6FiOk9Fyt3NCywPJgDuYLE5k

//Complete Function
int findPeakElement(vector<int>& nums) {
        int x = -1;
        int max = nums[0];
        for(int i=0; i<nums.size(); i++){
            if(nums[i] >= max){
                x = i;
                max = nums[i];
            }
        }
        return x;
 }
 
 Time Complexity - O(n)


//Optimized Code
//Using Binary Searching Algorithm
//Time Complexity - O(log(n))

int findPeakElement(vector<int>& nums) {
        int n = nums.size(), low = 0, high = n-1;
        while(high >= low){
            int mid = low + (high-low)/2;
            if(low==high)  
                return low;
            if(nums[mid] > nums[mid+1]) 
                high = mid; 
            else                        
                low = mid+1;            
        }
        return 0;
    }
