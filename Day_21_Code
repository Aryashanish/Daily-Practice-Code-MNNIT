//Problem Link
https://leetcode.com/problems/koko-eating-bananas/description/?fbclid=IwAR0igElfrbO2wlQhCLzOLtRU96BLLOTXnOKu_mPPUnXNMCSV7343C-Cg1p4

//Complete Method
class Solution {
public:
    int check(vector<int>&A,int h,int k)
    {
        for(int a : A)
        {
            int cur_hours = ceil((double)a / k);
            h -= cur_hours;
            if(h < 0)
                return 0;
            
        }
        return 1;
    }
    int minEatingSpeed(vector<int>&A, int h) {
        int l = 1;
        int r = *max_element(A.begin(),A.end());
        while(l < r)
        {
            int mid = (l + r) / 2;
            if(check(A,h,mid))
            {
                r = mid;
            }
            else
                l = mid + 1;
        }
        return r;
    }
};
