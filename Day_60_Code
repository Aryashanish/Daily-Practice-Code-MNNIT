//Problem Link
https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/submissions/


//Code
class Solution {
public:
    int findMin(vector<int>& nums) {
        int k = 1;
        for(int i = 0;i<nums.size()-1;i++){
            if(nums[i]<nums[i+1]) k++;
            else break;
        }
        for(int i = 0 ;i<nums.size();i++){
            nums[i] = nums[(i+k)%nums.size()];
        }
        return nums[0];
    }
};



//Problrm Link
https://practice.geeksforgeeks.org/problems/given-a-linked-list-of-0s-1s-and-2s-sort-it/1?fbclid=IwAR02O55XY50slbT258ggff427HMOV_EFwV0sO2fFmQSTYzQqKuJa5XHYLXk#


//Code
class Solution
{
    public:
    //Function to sort a linked list of 0s, 1s and 2s.
    Node* segregate(Node *head) {
        
        // Add code here
        int zero = 0;
        int one = 0;
        int two = 0;
        Node* temp = head;
        while(temp != NULL){
            if(temp->data == 0)
                zero++;
            else if(temp->data == 1)
                one++;
            else
                two++;
                
            temp = temp->next;
        }
        temp = head;
        while(temp != NULL){
            if(zero != 0){
                temp->data = 0;
                zero--;
            }
            else if(one != 0){
                temp->data = 1;
                one--;
            }
            else if(two != 0){
                temp->data = 2;
                two--;
            }
            temp = temp->next;
        }
        return head;
    }
};
